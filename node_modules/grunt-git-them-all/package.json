{
  "name": "grunt-git-them-all",
  "description": "All Git commands for grunt",
  "version": "0.0.10",
  "homepage": "https://github.com/ZuBB/grunt-git-them-all",
  "author": {
    "name": "Vasyl Zuzyak",
    "email": "zvasylvv@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ZuBB/grunt-git-them-all.git"
  },
  "bugs": {
    "url": "https://github.com/ZuBB/grunt-git-them-all/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ZuBB/grunt-git-them-all/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt-release": "^0.7.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "grunt plugin",
    "grunt git",
    "grunt",
    "git"
  ],
  "readme": "# grunt-git? no, its better! its \"grunt, git them all\"!\n\n> All Git commands for grunt\n\n## Why I came with one more grunt plugin for git?\n\nWe already have nice and fancy, well tested and fully configuralble [plugin](https://github.com/rubenv/grunt-git) for that. So what is wrong with it?\n\n* It used not to support run of git commands in custom path. I cooked a PR, but ... it was bad. Other guy did a better one, but it still requires one more option to have all that work.\n* I needed to run a command with option that was not supported by that plugin. I came with PR, but ... it did not have tests (yea, I am a bit lazy).\n* I needed to run a command that was supported by that plugin. But its explicit run is impossible because it is included into other task/command.\n\nOk, lets try to find some pros for that plugin. It supports dozen of tasks/commands which have tons of options. All that crowd turns into words and then into final string with word 'git' at start. And only after that its being invoked. Still as a shell command.\n\nWhat the reason to go around if you just need 1 simple thing? I think most of that buzz is useless there. Key of my plugin is next: **just write command and get what you need**\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-git-them-all --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-git-them-all');\n```\n\n## The \"gta\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `gta` (aka **G**it **T**hem **A**ll) to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  gta: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific command and/or options go here.\n    },\n  },\n});\n```\n\n### Command\nType: `String`\nDefault value: `null`\n\nGit command you want to run. Its not mandatory to specify leading `git`. **Required**\n\n### Options\n\n#### options.cwd\nType: `String`\nDefault value: `null`\n\nA path where git command will be run\n\n#### options.failOnError\n\nType: `boolean`\nDefault: `true`\n\nFail task if it encounters an error\n\n#### options.stdout\n\nType: `boolean`\nDefault: `false`\n\nShow stdout in the terminal.\n\n#### options.stderr\n\nType: `boolean`\nDefault: `false`\n\nShow stderr in the terminal.\n\n#### options.storeOutputTo\n\nType: `string`\nDefault: `(empty string)`\n\nStore output of the command to grunt's config by specified key\n\n#### options.postProcessOutput\n\nType: `function`\nDefault: `null`\n\nDoes postprocessing of output before it will be stored. Requires **storeOutputTo** to be set\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n    gta: {\n        add_target: {\n            command: 'add -A .',\n            options: {\n                stdout: true\n            }\n        },\n    },\n});\n\ngrunt.initConfig({\n    gta: {\n        options: {\n            cwd: '/path/where/to/run/git/command'\n        },\n        target_a: {\n            command: 'tag \"v0.5.0\"',\n            options: {\n                stderr: true\n            }\n        },\n        target_b: {\n            command: 'push origin master'\n            options: {\n                stderr: true\n            }\n        },\n    },\n});\n\ngrunt.initConfig({\n    gta: {\n        branch: {\n            command: 'rev-parse --abbrev-ref HEAD'\n            options: {\n                storeOutputTo: 'currentBranch'\n                postProcessOutput: function(output) {\n                    return output.trim();\n                }\n            }\n        },\n    },\n});\n...\ngrunt.registerTask('git-branch', 'print current branch', function() {\n    grunt.log.writeln('current branch is: ' + grunt.config('currentBranch'));\n});\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-git-them-all@0.0.10",
  "_shasum": "5d4d7c954eb2f20bfe39acdd509ee6b1955e6e76",
  "_from": "grunt-git-them-all@",
  "_resolved": "https://registry.npmjs.org/grunt-git-them-all/-/grunt-git-them-all-0.0.10.tgz"
}
